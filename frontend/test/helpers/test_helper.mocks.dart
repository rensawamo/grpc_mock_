// Mocks generated by Mockito 5.4.4 from annotations
// in frontend/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flutter_grpc_common/grpc.dart' as _i2;
import 'package:frontend/src/feature/data/todo_repository.dart' as _i4;
import 'package:frontend/src/feature/domain/completion_status_converter.dart'
    as _i7;
import 'package:frontend/src/feature/domain/todo_entity.dart' as _i6;
import 'package:grpc/grpc.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCompletionStatus_0 extends _i1.SmartFake
    implements _i2.CompletionStatus {
  _FakeCompletionStatus_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponseFuture_1<R> extends _i1.SmartFake
    implements _i3.ResponseFuture<R> {
  _FakeResponseFuture_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClientCall_2<Q1, R1> extends _i1.SmartFake
    implements _i3.ClientCall<Q1, R1> {
  _FakeClientCall_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponseStream_3<R1> extends _i1.SmartFake
    implements _i3.ResponseStream<R1> {
  _FakeResponseStream_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TodoRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoRepository extends _i1.Mock implements _i4.TodoRepository {
  MockTodoRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i6.TodoModel>> getTodos() => (super.noSuchMethod(
        Invocation.method(
          #getTodos,
          [],
        ),
        returnValue: _i5.Future<List<_i6.TodoModel>>.value(<_i6.TodoModel>[]),
      ) as _i5.Future<List<_i6.TodoModel>>);

  @override
  _i5.Future<void> createTodo({required String? content}) =>
      (super.noSuchMethod(
        Invocation.method(
          #createTodo,
          [],
          {#content: content},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateTodo({
    required String? id,
    required _i2.CompletionStatus? status,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTodo,
          [],
          {
            #id: id,
            #status: status,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteTodo({required String? id}) => (super.noSuchMethod(
        Invocation.method(
          #deleteTodo,
          [],
          {#id: id},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [CompletionStatusConverter].
///
/// See the documentation for Mockito's code generation for more information.
class MockCompletionStatusConverter extends _i1.Mock
    implements _i7.CompletionStatusConverter {
  MockCompletionStatusConverter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CompletionStatus fromJson(int? value) => (super.noSuchMethod(
        Invocation.method(
          #fromJson,
          [value],
        ),
        returnValue: _FakeCompletionStatus_0(
          this,
          Invocation.method(
            #fromJson,
            [value],
          ),
        ),
      ) as _i2.CompletionStatus);

  @override
  int toJson(_i2.CompletionStatus? status) => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [status],
        ),
        returnValue: 0,
      ) as int);
}

/// A class which mocks [TodoServiceClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoServiceClient extends _i1.Mock implements _i2.TodoServiceClient {
  MockTodoServiceClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.ResponseFuture<_i2.Empty> createTodo(
    _i2.CreateTodoRequest? request, {
    _i3.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createTodo,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_1<_i2.Empty>(
          this,
          Invocation.method(
            #createTodo,
            [request],
            {#options: options},
          ),
        ),
      ) as _i3.ResponseFuture<_i2.Empty>);

  @override
  _i3.ResponseFuture<_i2.GetTodosResponse> getTodos(
    _i2.Empty? request, {
    _i3.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTodos,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_1<_i2.GetTodosResponse>(
          this,
          Invocation.method(
            #getTodos,
            [request],
            {#options: options},
          ),
        ),
      ) as _i3.ResponseFuture<_i2.GetTodosResponse>);

  @override
  _i3.ResponseFuture<_i2.Empty> updateTodo(
    _i2.UpdateTodoRequest? request, {
    _i3.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTodo,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_1<_i2.Empty>(
          this,
          Invocation.method(
            #updateTodo,
            [request],
            {#options: options},
          ),
        ),
      ) as _i3.ResponseFuture<_i2.Empty>);

  @override
  _i3.ResponseFuture<_i2.Empty> deleteTodo(
    _i2.DeleteTodoRequest? request, {
    _i3.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTodo,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_1<_i2.Empty>(
          this,
          Invocation.method(
            #deleteTodo,
            [request],
            {#options: options},
          ),
        ),
      ) as _i3.ResponseFuture<_i2.Empty>);

  @override
  _i3.ClientCall<Q, R> $createCall<Q, R>(
    _i3.ClientMethod<Q, R>? method,
    _i5.Stream<Q>? requests, {
    _i3.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$createCall,
          [
            method,
            requests,
          ],
          {#options: options},
        ),
        returnValue: _FakeClientCall_2<Q, R>(
          this,
          Invocation.method(
            #$createCall,
            [
              method,
              requests,
            ],
            {#options: options},
          ),
        ),
      ) as _i3.ClientCall<Q, R>);

  @override
  _i3.ResponseFuture<R> $createUnaryCall<Q, R>(
    _i3.ClientMethod<Q, R>? method,
    Q? request, {
    _i3.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$createUnaryCall,
          [
            method,
            request,
          ],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_1<R>(
          this,
          Invocation.method(
            #$createUnaryCall,
            [
              method,
              request,
            ],
            {#options: options},
          ),
        ),
      ) as _i3.ResponseFuture<R>);

  @override
  _i3.ResponseStream<R> $createStreamingCall<Q, R>(
    _i3.ClientMethod<Q, R>? method,
    _i5.Stream<Q>? requests, {
    _i3.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$createStreamingCall,
          [
            method,
            requests,
          ],
          {#options: options},
        ),
        returnValue: _FakeResponseStream_3<R>(
          this,
          Invocation.method(
            #$createStreamingCall,
            [
              method,
              requests,
            ],
            {#options: options},
          ),
        ),
      ) as _i3.ResponseStream<R>);
}
